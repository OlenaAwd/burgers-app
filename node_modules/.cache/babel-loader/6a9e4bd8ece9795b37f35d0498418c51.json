{"ast":null,"code":"var _jsxFileName = \"/home/dev/Desktop/react-001-starter-files-2021-main/src/components/Order.js\";\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport Delivery from \"./Delivery\";\nimport { TransitionGroup, CSSTransition } from \"react-transition-group\";\n\nclass Order extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    this.renderOrder = key => {\n      const burger = this.props.burgers[key];\n      const count = this.props.order[key];\n      const isAvailable = burger && burger.status === \"available\";\n      const transitionOptions = {\n        classNames: \"order\",\n        key,\n        timeout: {\n          enter: 500,\n          exit: 500\n        }\n      };\n      if (!burger) return null;\n\n      if (!isAvailable) {\n        return /*#__PURE__*/React.createElement(CSSTransition, Object.assign({}, transitionOptions, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 27,\n            columnNumber: 9\n          }\n        }), /*#__PURE__*/React.createElement(\"li\", {\n          className: \"unavailable\",\n          key: key,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 28,\n            columnNumber: 11\n          }\n        }, \"Sorry, \", burger ? burger.name : \"burger\", \" temporary is unavailable\"));\n      }\n\n      return /*#__PURE__*/React.createElement(CSSTransition, Object.assign({}, transitionOptions, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 7\n        }\n      }), /*#__PURE__*/React.createElement(\"li\", {\n        key: key,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"span\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(TransitionGroup, {\n        component: \"span\",\n        className: \"count\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(CSSTransition, {\n        classNames: \"count\",\n        key: count,\n        timeout: {\n          enter: 500,\n          exit: 500\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(\"span\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 17\n        }\n      }, count))), \"pcs.\", burger.name, /*#__PURE__*/React.createElement(\"span\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 13\n        }\n      }, count * burger.price, \"\\u20BD\"), /*#__PURE__*/React.createElement(\"button\", {\n        onClick: () => this.props.deleteFromOrder(key),\n        className: \"cancellItem\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 13\n        }\n      }, \"\\xD7\")), key));\n    };\n  }\n\n  render() {\n    const orderIds = Object.keys(this.props.order);\n    const total = orderIds.reduce((prevTotal, key) => {\n      const burger = this.props.burgers[key];\n      const count = this.props.order[key];\n      const isAvailable = burger && burger.status === \"available\";\n\n      if (isAvailable) {\n        return prevTotal + burger.price * count;\n      }\n\n      return prevTotal;\n    }, 0);\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"order-wrap\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }\n    }, \"Your order\"), /*#__PURE__*/React.createElement(TransitionGroup, {\n      component: \"ul\",\n      className: \"order\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }\n    }, orderIds.map(this.renderOrder)), total > 0 ? /*#__PURE__*/React.createElement(Delivery, {\n      total: total,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 11\n      }\n    }) : /*#__PURE__*/React.createElement(\"div\", {\n      className: \"nothingSelected\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 11\n      }\n    }, \"Please, chose the dishes and add to your order\"));\n  }\n\n}\n\nOrder.propTypes = {\n  burgers: PropTypes.object,\n  order: PropTypes.object,\n  deleteFromOrder: PropTypes.func\n};\nexport default Order;","map":{"version":3,"sources":["/home/dev/Desktop/react-001-starter-files-2021-main/src/components/Order.js"],"names":["React","PropTypes","Delivery","TransitionGroup","CSSTransition","Order","Component","renderOrder","key","burger","props","burgers","count","order","isAvailable","status","transitionOptions","classNames","timeout","enter","exit","name","price","deleteFromOrder","render","orderIds","Object","keys","total","reduce","prevTotal","map","propTypes","object","func"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport Delivery from \"./Delivery\";\nimport { TransitionGroup, CSSTransition } from \"react-transition-group\";\n\nclass Order extends React.Component {\n  static propTypes = {\n    burgers: PropTypes.object,\n    order: PropTypes.object,\n    deleteFromOrder: PropTypes.func,\n  };\n\n  renderOrder = (key) => {\n    const burger = this.props.burgers[key];\n    const count = this.props.order[key];\n    const isAvailable = burger && burger.status === \"available\";\n    const transitionOptions = {\n      classNames: \"order\",\n      key,\n      timeout: { enter: 500, exit: 500 },\n    };\n\n    if (!burger) return null;\n\n    if (!isAvailable) {\n      return (\n        <CSSTransition {...transitionOptions}>\n          <li className=\"unavailable\" key={key}>\n            Sorry, {burger ? burger.name : \"burger\"} temporary is unavailable\n          </li>\n        </CSSTransition>\n      );\n    }\n\n    return (\n      <CSSTransition {...transitionOptions}>\n        <li key={key}>\n          <span>\n            <TransitionGroup component=\"span\" className=\"count\">\n              <CSSTransition\n                classNames=\"count\"\n                key={count}\n                timeout={{ enter: 500, exit: 500 }}\n              >\n                <span>{count}</span>\n              </CSSTransition>\n            </TransitionGroup>\n            pcs.{burger.name}\n            <span>{count * burger.price}₽</span>\n            <button\n              onClick={() => this.props.deleteFromOrder(key)}\n              className=\"cancellItem\"\n            >\n              &times;\n            </button>\n          </span>\n          {key}\n        </li>\n      </CSSTransition>\n    );\n  };\n  render() {\n    const orderIds = Object.keys(this.props.order);\n    const total = orderIds.reduce((prevTotal, key) => {\n      const burger = this.props.burgers[key];\n      const count = this.props.order[key];\n\n      const isAvailable = burger && burger.status === \"available\";\n      if (isAvailable) {\n        return prevTotal + burger.price * count;\n      }\n\n      return prevTotal;\n    }, 0);\n    return (\n      <div className=\"order-wrap\">\n        <h2>Your order</h2>\n        <TransitionGroup component=\"ul\" className=\"order\">\n          {orderIds.map(this.renderOrder)}\n        </TransitionGroup>\n        {total > 0 ? (\n          <Delivery total={total} />\n        ) : (\n          <div className=\"nothingSelected\">\n            Please, chose the dishes and add to your order\n          </div>\n        )}\n      </div>\n    );\n  }\n}\n\nexport default Order;\n"]},"metadata":{},"sourceType":"module"}