{"ast":null,"code":"var _jsxFileName = \"/home/dev/Desktop/react-001-starter-files-2021-main/src/components/App.js\";\nimport React from \"react\";\nimport Header from \"./Header\";\nimport Order from \"./Order\";\nimport MenuAdmin from \"./MenuAdmin\";\nimport sampleBurgers from \"../sample-burgers\";\nimport Burger from \"./Burger\";\nimport base, { firebaseApp } from \"../base\";\nimport firebase from \"firebase/app\";\nimport PropTypes from \"prop-types\";\nimport SignIn from \"./Auth/Signin\";\n\nclass App extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      burgers: {},\n      order: {}\n    };\n\n    this.addBurger = burger => {\n      // 1. Делаем копию объекта state\n      const burgers = { ...this.state.burgers\n      }; // 2. Добавить новый бургер в переменную burgers\n\n      burgers[`burger${Date.now()}`] = burger; // 3. Записать наш новый объект burgers в state\n\n      this.setState({\n        burgers\n      });\n    };\n\n    this.updateBurger = (key, updatedBurger) => {\n      // 1. Делаем копию объекта state\n      const burgers = { ...this.state.burgers\n      }; //2. Обновляем нужный бургер\n\n      burgers[key] = updatedBurger; //3. Записать новый объект Бургер в  state\n\n      this.setState({\n        burgers\n      });\n    };\n\n    this.deleteBurger = key => {\n      // 1. Делаем копию объекта state\n      const burgers = { ...this.state.burgers\n      }; //2. Удаляем burger\n\n      burgers[key] = null; //3. Записать новый объект Бургер в  state\n\n      this.setState({\n        burgers\n      });\n    };\n\n    this.loadSampleBurgers = () => {\n      this.setState({\n        burgers: sampleBurgers\n      });\n    };\n\n    this.addToOrder = key => {\n      // 1. Делаем копию объекта state\n      const order = { ...this.state.order\n      }; // 2. Добавить ключ к заказу со знач-ем 1, либо обновить текущ. знач.\n\n      order[key] = order[key] + 1 || 1; // 3. Записать наш новый объект order в state\n\n      this.setState({\n        order\n      });\n    };\n\n    this.deleteFromOrder = key => {\n      // 1. Делаем копию объекта state\n      const order = { ...this.state.order\n      }; //2. Удаляем burger\n\n      delete order[key]; // 3. Записать наш новый объект order в state\n\n      this.setState({\n        order\n      });\n    };\n\n    this.handleLogOut = async () => {\n      await firebaseApp.auth().signOut();\n      window.location;\n    };\n  }\n\n  componentDidMount() {\n    const {\n      params\n    } = this.props.match;\n    const localStorageRef = localStorage.getItem(params.restaurantId);\n\n    if (localStorageRef) {\n      this.setState({\n        order: JSON.parse(localStorageRef)\n      });\n    }\n\n    this.ref = base.syncState(`${params.restaurantId}/burgers`, {\n      context: this,\n      state: \"burgers\"\n    });\n  }\n\n  componentDidUpdate() {\n    const {\n      params\n    } = this.props.match;\n    localStorage.setItem(params.restaurantId, JSON.stringify(this.state.order));\n  }\n\n  componentWillUnmount() {\n    base.removeBinding(this.ref);\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(SignIn, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"burger-paradise\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Header, {\n      title: \"VERY HOT BURGER\",\n      amount: 10,\n      hot: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(\"ul\", {\n      className: \"burgers\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 13\n      }\n    }, Object.keys(this.state.burgers).map(key => {\n      return /*#__PURE__*/React.createElement(Burger, {\n        key: key,\n        index: key,\n        addToOrder: this.addToOrder,\n        details: this.state.burgers[key],\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 19\n        }\n      });\n    }))), /*#__PURE__*/React.createElement(Order, {\n      burgers: this.state.burgers,\n      order: this.state.order,\n      deleteFromOrder: this.deleteFromOrder,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(MenuAdmin, {\n      addBurger: this.addBurger,\n      loadSampleBurgers: this.loadSampleBurgers,\n      burgers: this.state.burgers,\n      updateBurger: this.updateBurger,\n      deleteBurger: this.deleteBurger,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 11\n      }\n    })));\n  }\n\n}\n\nApp.propTypes = {\n  match: PropTypes.object\n};\nexport default App;","map":{"version":3,"sources":["/home/dev/Desktop/react-001-starter-files-2021-main/src/components/App.js"],"names":["React","Header","Order","MenuAdmin","sampleBurgers","Burger","base","firebaseApp","firebase","PropTypes","SignIn","App","Component","state","burgers","order","addBurger","burger","Date","now","setState","updateBurger","key","updatedBurger","deleteBurger","loadSampleBurgers","addToOrder","deleteFromOrder","handleLogOut","auth","signOut","window","location","componentDidMount","params","props","match","localStorageRef","localStorage","getItem","restaurantId","JSON","parse","ref","syncState","context","componentDidUpdate","setItem","stringify","componentWillUnmount","removeBinding","render","Object","keys","map","propTypes","object"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport Header from \"./Header\";\nimport Order from \"./Order\";\nimport MenuAdmin from \"./MenuAdmin\";\nimport sampleBurgers from \"../sample-burgers\";\nimport Burger from \"./Burger\";\nimport base, { firebaseApp } from \"../base\";\nimport firebase from \"firebase/app\";\nimport PropTypes from \"prop-types\";\nimport SignIn from \"./Auth/Signin\";\n\nclass App extends React.Component {\n  static propTypes = {\n    match: PropTypes.object,\n  };\n\n  state = {\n    burgers: {},\n    order: {},\n  };\n\n  componentDidMount() {\n    const { params } = this.props.match;\n    const localStorageRef = localStorage.getItem(params.restaurantId);\n    if (localStorageRef) {\n      this.setState({ order: JSON.parse(localStorageRef) });\n    }\n\n    this.ref = base.syncState(`${params.restaurantId}/burgers`, {\n      context: this,\n      state: \"burgers\",\n    });\n  }\n\n  componentDidUpdate() {\n    const { params } = this.props.match;\n    localStorage.setItem(params.restaurantId, JSON.stringify(this.state.order));\n  }\n\n  componentWillUnmount() {\n    base.removeBinding(this.ref);\n  }\n\n  addBurger = (burger) => {\n    // 1. Делаем копию объекта state\n    const burgers = { ...this.state.burgers };\n    // 2. Добавить новый бургер в переменную burgers\n    burgers[`burger${Date.now()}`] = burger;\n    // 3. Записать наш новый объект burgers в state\n    this.setState({ burgers });\n  };\n\n  updateBurger = (key, updatedBurger) => {\n    // 1. Делаем копию объекта state\n    const burgers = { ...this.state.burgers };\n    //2. Обновляем нужный бургер\n    burgers[key] = updatedBurger;\n    //3. Записать новый объект Бургер в  state\n    this.setState({ burgers });\n  };\n\n  deleteBurger = (key) => {\n    // 1. Делаем копию объекта state\n    const burgers = { ...this.state.burgers };\n    //2. Удаляем burger\n    burgers[key] = null;\n    //3. Записать новый объект Бургер в  state\n    this.setState({ burgers });\n  };\n  loadSampleBurgers = () => {\n    this.setState({ burgers: sampleBurgers });\n  };\n\n  addToOrder = (key) => {\n    // 1. Делаем копию объекта state\n    const order = { ...this.state.order };\n    // 2. Добавить ключ к заказу со знач-ем 1, либо обновить текущ. знач.\n    order[key] = order[key] + 1 || 1;\n    // 3. Записать наш новый объект order в state\n    this.setState({ order });\n  };\n\n  deleteFromOrder = (key) => {\n    // 1. Делаем копию объекта state\n    const order = { ...this.state.order };\n    //2. Удаляем burger\n    delete order[key];\n    // 3. Записать наш новый объект order в state\n    this.setState({ order });\n  };\n\n  handleLogOut = async () => {\n    await firebaseApp.auth().signOut();\n    window.location;\n  };\n\n  render() {\n    return (\n      <SignIn>\n        <div className=\"burger-paradise\">\n          <div>\n            <Header title=\"VERY HOT BURGER\" amount={10} hot={true} />\n            <ul className=\"burgers\">\n              {Object.keys(this.state.burgers).map((key) => {\n                return (\n                  <Burger\n                    key={key}\n                    index={key}\n                    addToOrder={this.addToOrder}\n                    details={this.state.burgers[key]}\n                  />\n                );\n              })}\n            </ul>\n          </div>\n          <Order\n            burgers={this.state.burgers}\n            order={this.state.order}\n            deleteFromOrder={this.deleteFromOrder}\n          />\n          <MenuAdmin\n            addBurger={this.addBurger}\n            loadSampleBurgers={this.loadSampleBurgers}\n            burgers={this.state.burgers}\n            updateBurger={this.updateBurger}\n            deleteBurger={this.deleteBurger}\n          />\n        </div>\n      </SignIn>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}