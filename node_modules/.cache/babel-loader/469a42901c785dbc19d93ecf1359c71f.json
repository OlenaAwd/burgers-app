{"ast":null,"code":"var _jsxFileName = \"/home/dev/Desktop/react-001-starter-files-2021-main/src/components/Order.js\";\nimport React from \"react\";\n\nclass Order extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    this.renderOrder = key => {\n      const burger = this.props.burgers[key];\n      const count = this.props.order[key];\n      const isAvailable = burger && burger.status === \"available\";\n\n      if (!isAvailable) {\n        return /*#__PURE__*/React.createElement(\"li\", {\n          className: \"unavailable\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 11,\n            columnNumber: 9\n          }\n        }, \"Sorry, \", burger ? burger.name : \"burger\", \" temporary is unavailable\");\n      }\n\n      return /*#__PURE__*/React.createElement(\"li\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 17,\n          columnNumber: 12\n        }\n      }, key);\n    };\n  }\n\n  render() {\n    const orderIds = Object.keys(this.props.order);\n    const total = orderIds.reduce((prevTotal, key) => {\n      const burger = this.props.burgers[key];\n      const count = this.props.order[key];\n      const isAvailable = burger && burger.status === \"available\";\n\n      if (isAvailable) {\n        return prevTotal + burger.price * count;\n      }\n\n      return prevTotal;\n    }, 0);\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"order-wrap\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }\n    }, \"Your order\"), /*#__PURE__*/React.createElement(\"ul\", {\n      className: \"order\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }\n    }, orderIds.map(this.renderOrder)), total);\n  }\n\n}\n\nexport default Order;","map":{"version":3,"sources":["/home/dev/Desktop/react-001-starter-files-2021-main/src/components/Order.js"],"names":["React","Order","Component","renderOrder","key","burger","props","burgers","count","order","isAvailable","status","name","render","orderIds","Object","keys","total","reduce","prevTotal","price","map"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;;AAEA,MAAMC,KAAN,SAAoBD,KAAK,CAACE,SAA1B,CAAoC;AAAA;AAAA;;AAAA,SAClCC,WADkC,GACnBC,GAAD,IAAS;AACrB,YAAMC,MAAM,GAAG,KAAKC,KAAL,CAAWC,OAAX,CAAmBH,GAAnB,CAAf;AACA,YAAMI,KAAK,GAAG,KAAKF,KAAL,CAAWG,KAAX,CAAiBL,GAAjB,CAAd;AAEA,YAAMM,WAAW,GAAGL,MAAM,IAAIA,MAAM,CAACM,MAAP,KAAkB,WAAhD;;AACA,UAAI,CAACD,WAAL,EAAkB;AAChB,4BACE;AAAI,UAAA,SAAS,EAAC,aAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACUL,MAAM,GAAGA,MAAM,CAACO,IAAV,GAAiB,QADjC,8BADF;AAKD;;AAED,0BAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAKR,GAAL,CAAP;AACD,KAfiC;AAAA;;AAgBlCS,EAAAA,MAAM,GAAG;AACP,UAAMC,QAAQ,GAAGC,MAAM,CAACC,IAAP,CAAY,KAAKV,KAAL,CAAWG,KAAvB,CAAjB;AACA,UAAMQ,KAAK,GAAGH,QAAQ,CAACI,MAAT,CAAgB,CAACC,SAAD,EAAYf,GAAZ,KAAoB;AAChD,YAAMC,MAAM,GAAG,KAAKC,KAAL,CAAWC,OAAX,CAAmBH,GAAnB,CAAf;AACA,YAAMI,KAAK,GAAG,KAAKF,KAAL,CAAWG,KAAX,CAAiBL,GAAjB,CAAd;AAEA,YAAMM,WAAW,GAAGL,MAAM,IAAIA,MAAM,CAACM,MAAP,KAAkB,WAAhD;;AACA,UAAID,WAAJ,EAAiB;AACf,eAAOS,SAAS,GAAGd,MAAM,CAACe,KAAP,GAAeZ,KAAlC;AACD;;AAED,aAAOW,SAAP;AACD,KAVa,EAUX,CAVW,CAAd;AAWA,wBACE;AAAK,MAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,eAEE;AAAI,MAAA,SAAS,EAAC,OAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAuBL,QAAQ,CAACO,GAAT,CAAa,KAAKlB,WAAlB,CAAvB,CAFF,EAGGc,KAHH,CADF;AAOD;;AApCiC;;AAuCpC,eAAehB,KAAf","sourcesContent":["import React from \"react\";\n\nclass Order extends React.Component {\n  renderOrder = (key) => {\n    const burger = this.props.burgers[key];\n    const count = this.props.order[key];\n\n    const isAvailable = burger && burger.status === \"available\";\n    if (!isAvailable) {\n      return (\n        <li className=\"unavailable\">\n          Sorry, {burger ? burger.name : \"burger\"} temporary is unavailable\n        </li>\n      );\n    }\n\n    return <li>{key}</li>;\n  };\n  render() {\n    const orderIds = Object.keys(this.props.order);\n    const total = orderIds.reduce((prevTotal, key) => {\n      const burger = this.props.burgers[key];\n      const count = this.props.order[key];\n\n      const isAvailable = burger && burger.status === \"available\";\n      if (isAvailable) {\n        return prevTotal + burger.price * count;\n      }\n\n      return prevTotal;\n    }, 0);\n    return (\n      <div className=\"order-wrap\">\n        <h2>Your order</h2>\n        <ul className=\"order\">{orderIds.map(this.renderOrder)}</ul>\n        {total}\n      </div>\n    );\n  }\n}\n\nexport default Order;\n"]},"metadata":{},"sourceType":"module"}