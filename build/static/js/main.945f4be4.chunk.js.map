{"version":3,"sources":["sample-restaurants.js","components/Landing.js","components/Header.js","components/Delivery.js","components/Order.js","components/AddBurgerForm.js","components/EditBurgerForm.js","components/MenuAdmin.js","sample-burgers.js","components/Burger.js","base.js","components/Auth/Login.js","components/Auth/Signin.js","components/App.js","components/NotFound.js","components/Router.js","index.js"],"names":["restaurants","title","url","id","Landing","props","useState","setTitle","setUrl","display","toggleDisplay","className","onClick","map","restaurant","getTitle","key","history","push","Header","Delivery","total","this","deliveryCost","deliveryCostNeon","React","Component","Order","renderOrder","burger","burgers","count","order","isAvailable","status","transitionOptions","classNames","timeout","enter","exit","CSSTransition","TransitionGroup","component","name","price","deleteFromOrder","orderIds","Object","keys","reduce","prevTotal","AddBurgerForm","nameRef","createRef","priceRef","statusRef","descRef","imageRef","createBurger","e","preventDefault","current","value","parseFloat","desc","image","addBurger","onSubmit","ref","type","placeholder","autoComplete","EditBurgerForm","handleChange","updatedBurger","currentTarget","updateBurger","index","onChange","deleteBurger","MenuAdmin","state","photo","user","authHandler","authData","a","email","photoURL","setState","firebase","auth","onAuthStateChanged","avatar","src","alt","handleLogOut","loadSampleBurgers","sampleBurgers","burger1","burger2","burger3","burger4","burger5","burger6","burger7","burger8","burger9","Burger","details","disabled","addToOrder","firebaseApp","initializeApp","apiKey","authDomain","databaseURL","base","Rebase","createClass","database","Login","authenticate","SignIn","authProvider","signInWithPopup","then","children","App","Date","now","signOut","window","location","reload","params","match","localStorageRef","localStorage","getItem","restaurantId","JSON","parse","syncState","context","setItem","stringify","removeBinding","amount","hot","NotFound","Router","exact","path","render","document","querySelector"],"mappings":"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","file":"static/js/main.945f4be4.chunk.js","sourcesContent":["// Наши рестораны\nconst restaurants = [\n  {\n    title: 'Hot Burger Тверская',\n    url: 'hot-burger-tverskaya',\n    id: 1\n  },\n\n  {\n    title: 'Hot Burger Маросейка',\n    url: 'hot-burger-maroseyka',\n    id: 2\n  },\n  {\n    title: 'Hot Burger Петровка',\n    url: 'hot-burger-petrovka',\n    id: 3\n  }\n];\n\nexport default restaurants;\n","import React, { useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport restaurants from \"../sample-restaurants\";\n\nconst Landing = (props) => {\n  const [title, setTitle] = useState(\"\");\n  const [url, setUrl] = useState(\"\");\n  const [display, toggleDisplay] = useState(false);\n\n  const displayList = () => {\n    toggleDisplay(!display);\n  };\n\n  const getTitle = (restaurant) => {\n    const { title, url } = restaurant;\n    setTitle(title);\n    setUrl(url);\n    toggleDisplay(false);\n  };\n\n  const goToRestaurant = () => {\n    props.history.push(`/restaurant/${url}`);\n  };\n\n  return (\n    <div className=\"restaurant_select\">\n      <div className=\"restaurant_select_top\">\n        <div\n          onClick={displayList}\n          className=\"restaurant_select_top-header font-effect-outline\"\n        >\n          {title ? title : \"Выбери ресторан\"}\n        </div>\n        <div className=\"arrow_picker\">\n          <div className=\"arrow_picker-up\"></div>\n          <div className=\"arrow_picker-down\"></div>\n        </div>\n      </div>\n\n      {display ? (\n        <div className=\"restaurant_select_bottom\">\n          <ul>\n            {restaurants.map((restaurant) => {\n              return (\n                <li onClick={() => getTitle(restaurant)} key={restaurant.id}>\n                  {restaurant.title}\n                </li>\n              );\n            })}\n          </ul>\n        </div>\n      ) : null}\n\n      {title && !display ? (\n        <button onClick={goToRestaurant}>Перейти в ресторан</button>\n      ) : null}\n    </div>\n  );\n};\n\nLanding.propTypes = {\n  history: PropTypes.object,\n};\nexport default Landing;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nconst Header = (props) => (\n  <header className=\"top\">\n    <div className=\"wrap\">\n      <div className=\"header-content\">\n        <div className=\"header-rating\">\n          <div className=\"header-rating_tag\">Рейтинг: </div>\n          <div className=\"header-rating_icon\">★★★★★</div>\n        </div>\n\n        <div className=\"header-divider\"></div>\n        <h1 className=\"font-effect-fire-animation\">{props.title}</h1>\n        <h3>\n          <span>\n            Fast delivery hot\n            <span className=\"sub-header\"> #burgers</span>\n          </span>\n        </h3>\n      </div>\n    </div>\n  </header>\n);\n\nHeader.propTypes = {\n  title: PropTypes.string.isRequired,\n};\n\nexport default Header;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nclass Delivery extends React.Component {\n  static propTypes = {\n    total: PropTypes.number,\n  };\n\n  render() {\n    const { total } = this.props;\n    const deliveryCost = total > 0 && total < 500 ? 350 : 99;\n    const deliveryCostNeon =\n      deliveryCost === 99 ? (\n        <span className=\"font-effect-neon total_wrap-cheap\">\n          {deliveryCost} ₽\n        </span>\n      ) : (\n        <span>{deliveryCost} ₽</span>\n      );\n    return (\n      <div className=\"total\">\n        <div className=\"total_wrap\">\n          <div>\n            <div>Delivery: {total > 0 ? deliveryCostNeon : null}</div>\n            <div className=\"total_wrap-free\">\n              {total < 500\n                ? `Add more ${500 - total} ₽ to get delivery only for 99 ₽`\n                : null}\n            </div>\n          </div>\n          <div className=\"total_wrap-final\">Total: {total} ₽</div>\n        </div>\n      </div>\n    );\n  }\n}\nexport default Delivery;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport Delivery from \"./Delivery\";\nimport { TransitionGroup, CSSTransition } from \"react-transition-group\";\n\nclass Order extends React.Component {\n  static propTypes = {\n    burgers: PropTypes.object,\n    order: PropTypes.object,\n    deleteFromOrder: PropTypes.func,\n  };\n\n  renderOrder = (key) => {\n    const burger = this.props.burgers[key];\n    const count = this.props.order[key];\n    const isAvailable = burger && burger.status === \"available\";\n    const transitionOptions = {\n      classNames: \"order\",\n      key,\n      timeout: { enter: 500, exit: 500 },\n    };\n\n    if (!burger) return null;\n\n    if (!isAvailable) {\n      return (\n        <CSSTransition {...transitionOptions}>\n          <li className=\"unavailable\" key={key}>\n            Sorry, {burger ? burger.name : \"burger\"} temporary is unavailable\n          </li>\n        </CSSTransition>\n      );\n    }\n\n    return (\n      <CSSTransition {...transitionOptions}>\n        <li key={key}>\n          <span>\n            <TransitionGroup component=\"span\" className=\"count\">\n              <CSSTransition\n                classNames=\"count\"\n                key={count}\n                timeout={{ enter: 500, exit: 500 }}\n              >\n                <span>{count}</span>\n              </CSSTransition>\n            </TransitionGroup>\n            pcs.{burger.name}\n            <span>{count * burger.price}₽</span>\n            <button\n              onClick={() => this.props.deleteFromOrder(key)}\n              className=\"cancellItem\"\n            >\n              &times;\n            </button>\n          </span>\n          {key}\n        </li>\n      </CSSTransition>\n    );\n  };\n  render() {\n    const orderIds = Object.keys(this.props.order);\n    const total = orderIds.reduce((prevTotal, key) => {\n      const burger = this.props.burgers[key];\n      const count = this.props.order[key];\n\n      const isAvailable = burger && burger.status === \"available\";\n      if (isAvailable) {\n        return prevTotal + burger.price * count;\n      }\n\n      return prevTotal;\n    }, 0);\n    return (\n      <div className=\"order-wrap\">\n        <h2>Your order</h2>\n        <TransitionGroup component=\"ul\" className=\"order\">\n          {orderIds.map(this.renderOrder)}\n        </TransitionGroup>\n        {total > 0 ? (\n          <Delivery total={total} />\n        ) : (\n          <div className=\"nothingSelected\">\n            Please, chose the dishes and add to your order\n          </div>\n        )}\n      </div>\n    );\n  }\n}\n\nexport default Order;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nclass AddBurgerForm extends React.Component {\n  static propTypes = {\n    addBurger: PropTypes.func,\n  };\n\n  nameRef = React.createRef();\n  priceRef = React.createRef();\n  statusRef = React.createRef();\n  descRef = React.createRef();\n  nameRef = React.createRef();\n  imageRef = React.createRef();\n\n  createBurger = (e) => {\n    e.preventDefault();\n    const burger = {\n      name: this.nameRef.current.value,\n      price: parseFloat(this.priceRef.current.value || 0),\n      status: this.statusRef.current.value,\n      desc: this.descRef.current.value,\n      image: this.imageRef.current.value,\n    };\n    this.props.addBurger(burger);\n  };\n\n  render() {\n    return (\n      <form className=\"burger-edit\" onSubmit={this.createBurger}>\n        <input\n          ref={this.nameRef}\n          name=\"name\"\n          type=\"text\"\n          placeholder=\"Name\"\n          autoComplete=\"off\"\n        />\n        <input\n          ref={this.priceRef}\n          name=\"price\"\n          type=\"text\"\n          placeholder=\"Price\"\n          autoComplete=\"off\"\n        />\n        <select ref={this.statusRef} name=\"status\" className=\"status\">\n          <option value=\"available\">Available</option>\n          <option value=\"unavailable\">Remove from menu</option>\n        </select>\n        <textarea ref={this.descRef} name=\"desc\" placeholder=\"Desc\" />\n        <input\n          ref={this.imageRef}\n          name=\"image\"\n          type=\"text\"\n          placeholder=\"Image\"\n          autoComplete=\"off\"\n        />\n        <button type=\"submit\">+ Add to menu</button>\n      </form>\n    );\n  }\n}\nexport default AddBurgerForm;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nclass EditBurgerForm extends React.Component {\n  static propTypes = {\n    burger: PropTypes.shape({\n      image: PropTypes.string,\n      name: PropTypes.string,\n      price: PropTypes.number,\n      desc: PropTypes.string,\n      status: PropTypes.string,\n    }),\n    index: PropTypes.string,\n    updateBurger: PropTypes.func,\n    deleteBurger: PropTypes.func,\n  };\n\n  handleChange = (e) => {\n    const updatedBurger = {\n      ...this.props.burger,\n      [e.currentTarget.name]:\n        e.currentTarget.name === \"price\"\n          ? parseFloat(e.currentTarget.value) || 0\n          : e.currentTarget.value,\n    };\n    this.props.updateBurger(this.props.index, updatedBurger);\n  };\n\n  render() {\n    return (\n      <div className=\"burger-edit\">\n        <input\n          onChange={this.handleChange}\n          name=\"name\"\n          type=\"text\"\n          value={this.props.burger.name}\n        />\n        <input\n          onChange={this.handleChange}\n          name=\"price\"\n          type=\"text\"\n          value={this.props.burger.price}\n        />\n        <select\n          onChange={this.handleChange}\n          name=\"status\"\n          className=\"status\"\n          value={this.props.burger.status}\n        >\n          <option value=\"available\">Available</option>\n          <option value=\"unavailable\">Unavailable</option>\n        </select>\n        <textarea\n          onChange={this.handleChange}\n          name=\"desc\"\n          value={this.props.burger.desc}\n        />\n        <input\n          onChange={this.handleChange}\n          name=\"image\"\n          type=\"text\"\n          value={this.props.burger.image}\n        />\n        <button onClick={() => this.props.deleteBurger(this.props.index)}>\n          Delete from the menu\n        </button>\n      </div>\n    );\n  }\n}\nexport default EditBurgerForm;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport AddBurgerForm from \"./AddBurgerForm\";\nimport EditBurgerForm from \"./EditBurgerForm\";\nimport firebase from \"firebase/app\";\n\nclass MenuAdmin extends React.Component {\n  state = {\n    photo: \"\",\n    user: \"\",\n  };\n\n  static propTypes = {\n    burgers: PropTypes.object,\n    deleteBurger: PropTypes.func,\n    updateBurger: PropTypes.func,\n    addBurger: PropTypes.func,\n    loadSampleBurgers: PropTypes.func,\n  };\n\n  componentDidMount() {\n    firebase.auth().onAuthStateChanged((user) => {\n      if (user) {\n        this.authHandler({ user });\n      }\n    });\n  }\n\n  authHandler = async (authData) => {\n    const { email, photoURL } = authData.user;\n    this.setState({ user: email, photo: photoURL });\n  };\n\n  render() {\n    const { user, photo } = this.state;\n    const avatar = photo ? photo : \"/images/avatar.png\";\n    return (\n      <div>\n        {user ? (\n          <div className=\"login-header\">\n            <div className=\"avatar\">\n              <img src={avatar} alt={user} />\n            </div>\n            <button className=\"buttonLogout\" onClick={this.props.handleLogOut}>\n              Logout\n            </button>\n          </div>\n        ) : null}\n        <h2>Handling menu</h2>\n        {Object.keys(this.props.burgers).map((key) => {\n          return (\n            <EditBurgerForm\n              key={key}\n              index={key}\n              burger={this.props.burgers[key]}\n              updateBurger={this.props.updateBurger}\n              deleteBurger={this.props.deleteBurger}\n            />\n          );\n        })}\n        <AddBurgerForm addBurger={this.props.addBurger} />\n        <button onClick={this.props.loadSampleBurgers}>Load Burgers</button>\n      </div>\n    );\n  }\n}\nexport default MenuAdmin;\n","// Наше меню\nconst sampleBurgers = {\n  burger1: {\n    name: 'Чизбургер',\n    image: '/images/cheese.jpg',\n    desc:\n      'Классический бургер с бифштексом из 100% говядины с маринованными огурчиками и свежей пшеничной булочкой.',\n    price: 110,\n    status: 'available'\n  },\n\n  burger2: {\n    name: 'Чикенбургер',\n    image: '/images/chicken.jpg',\n    desc:\n      'Куриный бургер с добавлением расплавленного сыра, соуса Барбекю и листового салата.',\n    price: 140,\n    status: 'available'\n  },\n\n  burger3: {\n    name: 'Двойной Гамбургер',\n    image: '/images/double.jpg',\n    desc:\n      'Двойной гамбургер с бифштексом из 100% говядины и расплавленным сыром Чеддер и пряным соусом.',\n    price: 200,\n    status: 'unavailable'\n  },\n\n  burger4: {\n    name: 'Фишбургер',\n    image: '/images/fish.jpg',\n    desc:\n      'Рыбное филе высшего качества c листовым салатом, маринованными огурчиками и преправленное легким майонезом.',\n    price: 150,\n    status: 'available'\n  },\n\n  burger5: {\n    name: 'Картофель Фри',\n    image: '/images/fries.jpg',\n    desc:\n      'Хрустящие ломтики золотистого горячего картофеля Супер Фри, сделанные из отборного органического корнеплода!',\n    price: 85,\n    status: 'available'\n  },\n\n  burger6: {\n    name: 'King Бургер',\n    image: '/images/ham.jpg',\n    desc:\n      'Бургер из 100% отборной говядины, с жаренными ломтиками бекона и свежим расплавленным сыром, заправленный кетчупом и майонезом.',\n    price: 450,\n    status: 'available'\n  },\n\n  burger7: {\n    name: 'Мега Бургер',\n    image: '/images/mega.jpg',\n    desc:\n      'Наш самый большой бургер, сделанный из свежайшего бифштекса, с добавлением расплавленного сыра Чеддер и соленых огурчиков.',\n    price: 500,\n    status: 'available'\n  },\n\n  burger8: {\n    name: 'Бургер в Пите',\n    image: '/images/pita.jpg',\n    desc:\n      'Четыре котлеты из 100% говядины, покрытые плавленным сыром Чеддер, со свежим листовым салатом в свежей пшеничной лепешке.',\n    price: 380,\n    status: 'available'\n  },\n\n  burger9: {\n    name: 'Village Фри',\n    image: '/images/bakedFries.jpg',\n    desc:\n      'Порция свежих ломтиков картофеля, запеченых на открытом воздухе под мирно тлеющими углями',\n    price: 90,\n    status: 'available'\n  }\n};\n\nexport default sampleBurgers;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nclass Burger extends React.Component {\n  static propTypes = {\n    details: PropTypes.shape({\n      image: PropTypes.string,\n      name: PropTypes.string,\n      price: PropTypes.number,\n      desc: PropTypes.string,\n      status: PropTypes.string,\n    }),\n    index: PropTypes.string,\n    addToOrder: PropTypes.func,\n  };\n\n  render() {\n    const { image, name, price, desc, status } = this.props.details;\n    const isAvailable = status === \"available\";\n    return (\n      <li className=\"menu-burger\">\n        <div className=\"image-container\">\n          <img src={image} alt={name} />\n        </div>\n        <div className=\"burger-details\">\n          <h3 className=\"burger-name\">\n            {name} <span className=\"price\">{price} ₽</span>\n          </h3>\n          <p>{desc}</p>\n          <button\n            className=\"buttonOrder\"\n            disabled={!isAvailable}\n            onClick={() => this.props.addToOrder(this.props.index)}\n          >\n            {isAvailable ? \"Order\" : \"Temporary is not available\"}\n          </button>\n        </div>\n      </li>\n    );\n  }\n}\n\nexport default Burger;\n","import Rebase from \"re-base\";\nimport firebase from \"firebase/app\";\nimport \"firebase/database\";\nimport \"firebase/auth\";\n\nconst firebaseApp = firebase.initializeApp({\n  apiKey: \"AIzaSyBXFHHvEXTs2pBydPpQkF17lx4gW4sEMm8\",\n  authDomain: \"very-hot-burgers-ce309.firebaseapp.com\",\n  databaseURL: \"https://very-hot-burgers-ce309-default-rtdb.firebaseio.com\",\n\n  //   projectId: \"very-hot-burgers-ce309\",\n  //   storageBucket: \"very-hot-burgers-ce309.appspot.com\",\n  //   messagingSenderId: \"4953632153\",\n  //   appId: \"1:4953632153:web:192020bf8a4710141fb708\",\n});\n\nconst base = Rebase.createClass(firebaseApp.database());\n\nexport { firebaseApp };\n\nexport default base;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nconst Login = (props) => {\n  return (\n    <div className=\"login-container\">\n      <nav className=\"login\">\n        <h2>Authorization</h2>\n        <p> Enter your login and password of your Github account</p>\n        <button className=\"github\" onClick={() => props.authenticate()}>\n          Login\n        </button>\n      </nav>\n    </div>\n  );\n};\n\nLogin.propTypes = {\n  authenticate: PropTypes.func.isRequired,\n};\n\nexport default Login;\n","import React from \"react\";\nimport Login from \"./Login\";\nimport firebase from \"firebase/app\";\nimport { firebaseApp } from \"../../base\";\n\nclass SignIn extends React.Component {\n  state = {\n    user: \"\",\n  };\n\n  componentDidMount() {\n    firebase.auth().onAuthStateChanged((user) => {\n      if (user) {\n        this.authHandler({ user });\n      }\n    });\n  }\n\n  authHandler = async (authData) => {\n    const { email } = authData.user;\n    this.setState({ user: email });\n  };\n\n  authenticate = () => {\n    const authProvider = new firebase.auth[\"GithubAuthProvider\"]();\n    firebaseApp.auth().signInWithPopup(authProvider).then(this.authHandler);\n  };\n\n  render() {\n    if (!this.state.user) {\n      return <Login authenticate={this.authenticate} />;\n    }\n    return this.props.children;\n  }\n}\n\nexport default SignIn;\n","import React from \"react\";\nimport Header from \"./Header\";\nimport Order from \"./Order\";\nimport MenuAdmin from \"./MenuAdmin\";\nimport sampleBurgers from \"../sample-burgers\";\nimport Burger from \"./Burger\";\nimport base, { firebaseApp } from \"../base\";\nimport PropTypes from \"prop-types\";\nimport SignIn from \"./Auth/Signin\";\n\nclass App extends React.Component {\n  static propTypes = {\n    match: PropTypes.object,\n  };\n\n  state = {\n    burgers: {},\n    order: {},\n  };\n\n  componentDidMount() {\n    const { params } = this.props.match;\n    const localStorageRef = localStorage.getItem(params.restaurantId);\n    if (localStorageRef) {\n      this.setState({ order: JSON.parse(localStorageRef) });\n    }\n\n    this.ref = base.syncState(`${params.restaurantId}/burgers`, {\n      context: this,\n      state: \"burgers\",\n    });\n  }\n\n  componentDidUpdate() {\n    const { params } = this.props.match;\n    localStorage.setItem(params.restaurantId, JSON.stringify(this.state.order));\n  }\n\n  componentWillUnmount() {\n    base.removeBinding(this.ref);\n  }\n\n  addBurger = (burger) => {\n    // 1. Делаем копию объекта state\n    const burgers = { ...this.state.burgers };\n    // 2. Добавить новый бургер в переменную burgers\n    burgers[`burger${Date.now()}`] = burger;\n    // 3. Записать наш новый объект burgers в state\n    this.setState({ burgers });\n  };\n\n  updateBurger = (key, updatedBurger) => {\n    // 1. Делаем копию объекта state\n    const burgers = { ...this.state.burgers };\n    //2. Обновляем нужный бургер\n    burgers[key] = updatedBurger;\n    //3. Записать новый объект Бургер в  state\n    this.setState({ burgers });\n  };\n\n  deleteBurger = (key) => {\n    // 1. Делаем копию объекта state\n    const burgers = { ...this.state.burgers };\n    //2. Удаляем burger\n    burgers[key] = null;\n    //3. Записать новый объект Бургер в  state\n    this.setState({ burgers });\n  };\n  loadSampleBurgers = () => {\n    this.setState({ burgers: sampleBurgers });\n  };\n\n  addToOrder = (key) => {\n    // 1. Делаем копию объекта state\n    const order = { ...this.state.order };\n    // 2. Добавить ключ к заказу со знач-ем 1, либо обновить текущ. знач.\n    order[key] = order[key] + 1 || 1;\n    // 3. Записать наш новый объект order в state\n    this.setState({ order });\n  };\n\n  deleteFromOrder = (key) => {\n    // 1. Делаем копию объекта state\n    const order = { ...this.state.order };\n    //2. Удаляем burger\n    delete order[key];\n    // 3. Записать наш новый объект order в state\n    this.setState({ order });\n  };\n\n  handleLogOut = async () => {\n    await firebaseApp.auth().signOut();\n    window.location.reload();\n  };\n\n  render() {\n    return (\n      <SignIn>\n        <div className=\"burger-paradise\">\n          <div>\n            <Header title=\"VERY HOT BURGER\" amount={10} hot={true} />\n            <ul className=\"burgers\">\n              {Object.keys(this.state.burgers).map((key) => {\n                return (\n                  <Burger\n                    key={key}\n                    index={key}\n                    addToOrder={this.addToOrder}\n                    details={this.state.burgers[key]}\n                  />\n                );\n              })}\n            </ul>\n          </div>\n          <Order\n            burgers={this.state.burgers}\n            order={this.state.order}\n            deleteFromOrder={this.deleteFromOrder}\n          />\n          <MenuAdmin\n            addBurger={this.addBurger}\n            loadSampleBurgers={this.loadSampleBurgers}\n            burgers={this.state.burgers}\n            updateBurger={this.updateBurger}\n            deleteBurger={this.deleteBurger}\n            handleLogOut={this.handleLogOut}\n          />\n        </div>\n      </SignIn>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\n\nconst NotFound = () => {\n  return (\n    <div>\n      <h2>The Page is Not Found</h2>\n    </div>\n  );\n};\n\nexport default NotFound;\n","import React from \"react\";\nimport {\n  BrowserRouter,\n  Route,\n  Switch,\n} from \"react-router-dom/cjs/react-router-dom.min\";\nimport Landing from \"./Landing\";\nimport App from \"./App\";\nimport NotFound from \"./NotFound\";\n\nconst Router = () => {\n  return (\n    <BrowserRouter>\n      <Switch>\n        <Route exact path=\"/\" component={Landing} />\n        <Route path=\"/restaurant/:restaurantId\" component={App} />\n        <Route component={NotFound} />\n      </Switch>\n    </BrowserRouter>\n  );\n};\n\nexport default Router;\n","import React from \"react\";\nimport { render } from \"react-dom\";\nimport Router from \"./components/Router\";\nimport \"./css/style.css\";\n\nrender(<Router />, document.querySelector(\"#root\"));\n"],"sourceRoot":""}